@model List<IMSMIS.Models.Data>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Project Total Counts Graph</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
        <style>

        .card {
            flex: 1;
            box-shadow: 0 0 8px rgba(117, 117, 117, 0.5);
            border-radius: 5px;
            overflow: hidden;
        }

        .card .card-head {
            color: black;
            padding: 10px;
        }

        .card .card-body {
            padding: 10px;
        }

         .graphbtn {
         position: relative;
         background-color: #fff;
         color: black;
         border:none;
         box-shadow: 0 0 10px rgba(117, 117, 117, 0.5);
         padding: 3px 20px;
         text-align: center;
         text-decoration: none;
         display: inline-block;
         font-size: 16px;
         margin: 5px 5px;
         cursor: pointer;
         justify-content: flex-end;
        }
        
        
        .graphbtn:hover {
            background: #a196c5;
            color: #fff;
            font-weight: bold;
        }

        .filterdropdown{
            border:1px solid gray;
            background:#fff;
            width:150px;
            margin-left:10px;
            border-radius:8px;
        }

        .dropdown-menu {
        max-height: 300px;
        overflow-y: auto;
    }
    </style>
</head>
<body>

     <div class="card">

         @if (Model != null && Model.Any())
         {
            var firstItem = Model.First();
            <input type="hidden" id="hiddenProjectName" value="@firstItem.Project" />
         }

        <div class="card-head">
            <div class="row">
                <div class="col"  style="text-align: start; margin-bottom: 10px; margin-top:15px;">
                    <div class="row">
                        <div class ="col-3">
                            <div class="dropdown">
                                 <button class="filterdropdown dropdown-toggle" type="button" id="dropdownMenuButtonproject" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" disabled>
                                   @ViewBag.Project
                                 </button>
                                 <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">

                                    @foreach (var project in ViewBag.UniqueProjects)
                                    {
                                      <label class="dropdown-item @(project == ViewBag.Project ? "active" : "")" onclick="handleProjectSelection('@project')">@project</label>
                                    }
                                 </div>
                            </div>

                        </div>
                        <div class ="col-3">
                            <div class="dropdown">
                                <button class="filterdropdown dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                   @ViewBag.Year
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    @foreach (var year in Enumerable.Range(2000, DateTime.Now.Year - 1999).Reverse()) // Change the range as needed
                                    {
                                        <label class="dropdown-item @(year == ViewBag.Year ? "active" : "")"  onclick="updateButtonText(@year)">@year</label>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    
                </div>
                
                <div class="col" style="text-align: end; margin-bottom: 10px; margin-top:15px;">
                    <button class="graphbtn" id="PexportBtnExcel" style="border-radius:10px; margin-right: 10px;margin-bottom: 5px; margin-top:5px;">Excel Export</button>
                    <button class="graphbtn" id="PexportBtnCsv" style="border-radius:10px; margin-right: 10px;margin-bottom: 5px;margin-top:5px;">Csv Export</button>
                    <button class="graphbtn" id="PexportBtnPrintout" style="border-radius:10px; margin-right: 10px;margin-bottom: 5px;margin-top:5px;">Printout</button>
                    <button class="graphbtn" id="PexportBtnMail" style="border-radius:10px; margin-right: 10px;margin-bottom: 5px;margin-top:5px;">Send Mail</button>
                </div>
            </div>
            
        </div>

        <div class="card-body">

             <canvas id="monthlyCountsChart" style="width:100%; height:70vh;"></canvas>

        </div>

         
    </div>

       <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>

       <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
         function handleProjectSelection(project) {
             document.getElementById("dropdownMenuButtonproject").innerText = project;
         }
    </script>

    <script>
         function updateButtonText(year) {
             document.getElementById("dropdownMenuButton").innerText = year;
              sendToController(year);
         }
        
        function sendToController(year) { 
        var project = document.getElementById('hiddenProjectName')
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ProjectCount1", "Reports")',
                data: { projectName: project,
                year = year
                },
                success: function (response) {
                   
                    window.location.href = '/Reports/MonthWise?projectName=' + project + '&data=' + JSON.stringify(response);
                    console.log('Project name sent successfully');
                },
                error: function (xhr, status, error) {
                   
                    console.error('Error sending project name:', error);
                }
            });
        }
    </script>


    <script>
        // Retrieve data from model
        var month = [];
        var totalCounts = [];
        @foreach (var item in Model)
        {
            <text>month.push('@item.month - @item.year');</text>
            <text>totalCounts.push('@item.totaldata');</text>
        }

        // Create the chart
        var ctx = document.getElementById('monthlyCountsChart').getContext('2d');
        var monthlyCountsChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: month,
                datasets: [{
                    label: 'Total Counts',
                    data: totalCounts,
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgba(54, 162, 235, 1)', // Solid blue border
                    borderWidth: 1
                }]
            },
           options: {
                interaction: {
                    mode: 'index',
                    intersect: true,
                },
                indexAxis: 'y',
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    x: {
                        ticks: {
                            color: 'black',
                            font: {
                                weight: 'bold'
                            }
                        }
                    },
                    y: {
                        ticks: {
                            color: 'black',
                            font: {
                                weight: 'bold'
                            }
                        },
                        grid: {
                            display: false 
                        }
                    }
                },
                plugins: {
                    legend: {
                        labels: {
                            color: 'black',
                            font: {
                                weight: 'bold'
                            }
                        }
                    }
                }  ,
                onClick: function (e) {
                    var activePoints = monthlyCountsChart.getElementsAtEventForMode(e, 'nearest', { intersect: true }, false);
                    if (activePoints.length) {
                        var firstPoint = activePoints[0];
                        var label = this.data.labels[firstPoint.index];
                        var [month, year] = label.split(' - ');
                        var project = document.getElementById('hiddenProjectName').value;
                        console.log(project);
                        
                        // Send the project name to the ProjectGraph action of the Reports controller
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("ProjectCount", "Reports")',
                            data: { 
                                projectName: project ,
                                month: month,
                                year: year
                            },
                            success: function (response) {
                               
                                window.location.href = '/Reports/Project?projectName=' + project + '&data=' + JSON.stringify(response);
                                console.log('Project name sent successfully');
                            },
                            error: function (xhr, status, error) {
                               
                                console.error('Error sending project name:', error);
                            }
                        });
                    }
                }
            }
        });
    </script>



</body>
</html>
