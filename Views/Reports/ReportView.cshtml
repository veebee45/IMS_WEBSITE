@model List<IMSMIS.Models.Data>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Project Total Counts Graph</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <style>

        .card {
            flex: 1;
            box-shadow: 0 0 8px rgba(117, 117, 117, 0.5);
            border-radius: 5px;
            overflow: hidden;
        }

        .card .card-head {
            color: black;
            padding: 10px;
        }

        .card .card-body {
            padding: 10px;
        }

         .graphbtn {
         position: relative;
         background-color: #fff;
         color: black;
         border:none;
         box-shadow: 0 0 10px rgba(117, 117, 117, 0.5);
         padding: 3px 20px;
         text-align: center;
         text-decoration: none;
         display: inline-block;
         font-size: 16px;
         margin: 5px 5px;
         cursor: pointer;
         justify-content: flex-end;
        }
        
        
        .graphbtn:hover {
            background: #a196c5;
            color: #fff;
            font-weight: bold;
        }

        .projectdropdown{
            border:1px solid gray;
            background:#fff;
            width:150px;
            margin-left:10px;
            border-radius:8px;
        }

        .dropdown-menu {
        max-height: 300px;
        overflow-y: auto;
    }
    </style>

</head>
<body>

    <div class="card">
        
        <div class="card-head">
            <div class="row">
                <div class="col"  style="text-align: start; margin-bottom: 10px; margin-top:15px;">
                    
                

                </div>
                <div class="col" style="text-align: end; margin-bottom: 10px; margin-top:15px;">
                    <button class="graphbtn" id="PexportBtnExcel" style="border-radius:10px; margin-right: 10px;margin-bottom: 5px; margin-top:5px;">Excel Export</button>
                    <button class="graphbtn" id="PexportBtnCsv" style="border-radius:10px; margin-right: 10px;margin-bottom: 5px;margin-top:5px;">Csv Export</button>
                    @* <button class="graphbtn" id="PexportBtnPrintout" style="border-radius:10px; margin-right: 10px;margin-bottom: 5px;margin-top:5px;">Printout</button>
                    <button class="graphbtn" id="PexportBtnMail" style="border-radius:10px; margin-right: 10px;margin-bottom: 5px;margin-top:5px;">Send Mail</button> *@
                </div>
            </div>
            
        </div>

        <div class="card-body">

            <canvas id="projectCountsChart" style="width:100%;"></canvas>

        </div>

         
    </div>
   <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>


       <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
       <script>
           function handleProjectSelection(project) {
               $.ajax({
                   type: 'POST',
                   url: '@Url.Action("ProjectCount1", "Reports")',
                   data: { projectName: project },
                   success: function (response) {
                       window.location.href = '/Reports/MonthWise?projectName=' + encodeURIComponent(project) + '&data=' + encodeURIComponent(JSON.stringify(response));
                       console.log('Project name sent successfully');
                   },
                   error: function (xhr, status, error) {
                       console.error('Error sending project name:', error);
                   }
               });
           }
       </script>

    <script>
        // Retrieve data from model
        var Labels = [];
        var Data = [];
        @foreach (var item in Model)
        {
            <text>Labels.push('@item.Project');</text>
            <text>Data.push('@item.totaldata');</text>
        }

        var canvas = document.getElementById('projectCountsChart');

		canvas.height = Labels.length * 50; // 30 pixels per data point, adjust as needed

		var ctx = canvas.getContext('2d');
        // Create the chart
       var projectCountsChart = new Chart(ctx, {
				type: 'bar',
				data: {
					labels: Labels,
					datasets: [{
						label: 'Total Counts',
						data: Data,
						backgroundColor: [
							'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)',
							'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)',
							'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)',
							'rgba(255, 99, 64, 1)', 'rgba(54, 162, 132, 1)',
							'rgba(75, 206, 86, 1)', 'rgba(153, 192, 192, 1)',
							'rgba(255, 206, 255, 1)', 'rgba(255, 159, 132, 1)',
							'rgba(54, 102, 235, 1)', 'rgba(75, 159, 192, 1)',
							'rgba(153, 64, 255, 1)', 'rgba(255, 99, 192, 1)',
							'rgba(54, 206, 64, 1)', 'rgba(75, 102, 86, 1)',
							'rgba(153, 162, 192, 1)', 'rgba(255, 159, 255, 1)'
						],
						borderColor: [
							'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)',
							'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)',
							'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)',
							'rgba(255, 99, 64, 0.2)', 'rgba(54, 162, 132, 0.2)',
							'rgba(75, 206, 86, 0.2)', 'rgba(153, 192, 192, 0.2)',
							'rgba(255, 206, 255, 0.2)', 'rgba(255, 159, 132, 0.2)',
							'rgba(54, 102, 235, 0.2)', 'rgba(75, 159, 192, 0.2)',
							'rgba(153, 64, 255, 0.2)', 'rgba(255, 99, 192, 0.2)',
							'rgba(54, 206, 64, 0.2)', 'rgba(75, 102, 86, 0.2)',
							'rgba(153, 162, 192, 0.2)', 'rgba(255, 159, 255, 0.2)'
						],
						borderWidth: 1
					}]
				},
				options: {
					interaction: {
						mode: 'index',
						intersect: true,
					},
					indexAxis: 'y',
					responsive: true,
					maintainAspectRatio: false,
					scales: {
						x: {
							ticks: {
								color: 'black',
								font: {
									weight: 'bold'
								}
							},
							grid: {
								display: false
							}
						},
						y: {
							ticks: {
								color: 'black',
								font: {
									weight: 'bold',
									size: 14
								}
							},
							grid: {
								display: false
							}
						}
					},
					plugins: {
						legend: {
							labels: {
								color: 'black',
								font: {
									weight: 'bold'
								}
							}
						}
					},
					barThickness: 30
				}
			});

		function exportToCsv(filename, label, rows) {
	var processRow = function (row) {
		return row.map(String).map(function (v) {
			return v.replace(/"/g, '""');
		}).join(',') + '\n';
	};

	var csvFile = label + ',Total Counts\n';
	rows.forEach(function (row) {
		csvFile += processRow(row);
	});

	var blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });
	if (navigator.msSaveBlob) { // IE 10+
		navigator.msSaveBlob(blob, filename);
	} else {
		var link = document.createElement("a");
		if (link.download !== undefined) { // feature detection
			var url = URL.createObjectURL(blob);
			link.setAttribute("href", url);
			link.setAttribute("download", filename);
			link.style.visibility = 'hidden';
			document.body.appendChild(link);
			link.click();
			document.body.removeChild(link);
		}
	}
}

// Function to export data to Excel
function exportToExcel(filename, rows) {
	var ws = XLSX.utils.aoa_to_sheet(rows);
	var wb = XLSX.utils.book_new();
	XLSX.utils.book_append_sheet(wb, ws, "Sheet1");
	XLSX.writeFile(wb, filename);
}

// Determine the label based on the description
var label = "Project";

document.getElementById('PexportBtnCsv').addEventListener('click', function () {
	var rows = Labels.map((label, index) => [label, Data[index]]);
	exportToCsv('data.csv', label, rows);
});

document.getElementById('PexportBtnExcel').addEventListener('click', function () {
	var rows = [[label, 'Total Counts'], ...Labels.map((label, index) => [label, Data[index]])];
	exportToExcel('data.xlsx', rows);
})



           
    </script>
</body>
</html>
